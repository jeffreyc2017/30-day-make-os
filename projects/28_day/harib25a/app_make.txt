OBJS_APP = stdio.obj strcmp.obj strncmp.obj rand.obj

TOOLPATH = ../../z_tools/
INCPATH  = ../../z_tools/haribote/
APILIBPATH   = ../apilib/
HARIBOTEPATH = ../haribote/

IS_RASPBERRY_PI := $(if $(RPI),1,0)
UNAME := $(shell uname -a)
RASPBERRY_PI := $(findstring raspberrypi,$(UNAME))

ifeq ($(RASPBERRY_PI),raspberrypi)
	IS_RASPBERRY_PI := 1
else
	IS_RASPBERRY_PI := 0
endif

# Default GCCPREFIX for x86 PC
GCCPREFIX :=

# Set GCCPREFIX for Raspberry Pi
ifeq ($(IS_RASPBERRY_PI),1)
	GCCPREFIX := i686-linux-gnu-
endif

NASM = nasm
CC = $(GCCPREFIX)gcc
AS = $(GCCPREFIX)as
LD = $(GCCPREFIX)ld
OBJCOPY = $(GCCPREFIX)objcopy
OBJDUMP = $(GCCPREFIX)objdump
DEL = rm -f

APP_CFLAGS 	= -Wall -Wno-format -Wno-unused -std=gnu99 -fno-pie -m32 -fleading-underscore -fno-stack-protector -nostdinc -nostdlib -I../
APP_LDFLAGS = -m elf_i386 --oformat binary -e _HariMain

UTILS_FOLDER := ../../../../utils
LIBC_DIR := $(UTILS_FOLDER)/libc

APP_CFLAGS += -I $(LIBC_DIR)/include

# デフォルト動作

default: $(APP).hrb

# ファイル生成規則

$(APP).hrb: $(APP).obj $(APILIBPATH)apilib.lib $(OBJS_APP)
	$(LD) $(APP_LDFLAGS) --oformat binary $^ -o $@ -T ../app.lds

# stars.hrb: stars.obj $(APILIBPATH)apilib.lib rand.obj
#	$(LD) $(APP_LDFLAGS) --oformat binary $^ -o $@ -T ../app.lds

# stars2.hrb: stars2.obj $(APILIBPATH)apilib.lib rand.obj
#	$(LD) $(APP_LDFLAGS) --oformat binary $^ -o $@ -T ../app.lds

haribote.img: ../haribote/ipl10.bin ../haribote/haribote.sys $(APP).hrb \
		../app_make.txt
	# Create an empty 1.44MB floppy image
	dd if=/dev/zero of=$@ bs=512 count=2880

	# Format the image as FAT12
	# This command causes the file starts from 0x4400. Use makfs.msdos instead.
	# mkfs.fat -F 12 $@
	mkfs.msdos -F 12 $@

	# Write the boot sector
	dd if=../haribote/ipl10.bin of=$@ bs=512 count=1 conv=notrunc

	# copy to 0x4200
	mcopy -i $@ ../haribote/haribote.sys ::/
	mcopy -i $@ a.hrb ::/

# 一般規則

%.obj: %.c
	$(CC) $(APP_CFLAGS) -c $< -o $@

#%.nas %.lst: %.c
#	$(CC) $(APP_CFLAGS) -S -fverbose-asm -Wa,-adhln=$*.lst -o $*.nas $<

#%.obj: %.nas
#	cat $<
#	$(AS) -c $< -o $@

%.obj: %.nas
	$(NASM) $(NASM_FLAGS) -f elf32 -o $@ $< -l $*.lst

# コマンド

run : haribote.img
	qemu-system-i386 $(QEMU_FLAGS) -m 32 -vga std -drive \
	file=$<,format=raw,if=floppy,index=0,media=disk

full : $(APP).hrb $(APILIBPATH)apilib.lib

run_full : full run

clean:
	-$(DEL) *.lst
	-$(DEL) *.obj
	-$(DEL) haribote.img

src_only : clean
	-$(DEL) $(APP).hrb

stdio.obj: $(LIBC_DIR)/stdio/stdio.c
	$(CC) $(APP_CFLAGS) -c $< -o $@

strcmp.obj: $(LIBC_DIR)/string/strcmp.c
	$(CC) $(APP_CFLAGS) -c $< -o $@

strncmp.obj: $(LIBC_DIR)/string/strncmp.c
	$(CC) $(APP_CFLAGS) -c $< -o $@

rand.obj: $(LIBC_DIR)/stdlib/rand.c
	$(CC) $(APP_CFLAGS) -c $< -o $@
